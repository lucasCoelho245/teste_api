{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "cleanapi",
            "command": "dotnet",
            "type": "process",
            "args": [
                "clean",
                "${workspaceFolder}/src/Template.Api/Template.Api.csproj"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "buildapi",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/src/Template.Api/Template.Api.csproj"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn":["cleanapi"]
        },
        {
            "label": "unit test",
            "command": "dotnet",
            "type": "process",
            "args": [
                "test",
                "${workspaceFolder}/test/unitario/Template.UnitTest/Template.UnitTest.csproj"
            ],
            "problemMatcher": "$msCompile",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "test with coverage",
            "command": "dotnet",
            "type": "process",
            "args": [
                "test",
                "/p:CollectCoverage=true",
                "/p:CoverletOutputFormat=lcov",
                "/p:CoverletOutput=../../../coverage/lcov.info",
                "${workspaceFolder}/test/unitario/Template.UnitTest/Template.UnitTest.csproj"
            ],
            "problemMatcher": "$msCompile",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "sonar",
            "type": "shell",
            "windows": {
                "command": "${workspaceFolder}\\scripts\\sonar.bat"
            },
            "osx": {
                "command": "${workspaceFolder}/scripts/sonar.sh"
            },
            "presentation": {
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []
        }
    ]
}